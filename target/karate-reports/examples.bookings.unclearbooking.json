[{"line":1,"elements":[{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"url apiURL","result":{"duration":64800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":4,"doc_string":{"content_type":"","value":"21:25:24.829 karate.env system property was: null \n","line":4}}]},{"line":9,"name":"","description":"","id":"","type":"scenario","keyword":"Scenario","steps":[{"name":"params { id: null, date: null }","result":{"duration":114500,"status":"passed"},"match":{"location":"karate","arguments":[]},"comments":["## Current API behaviour is to return status: 400, with message \"Bad request: date and id empty\"","## when no User ID or Booking Date is provided","##","## However, given the method description on the API:","## - \"Get bookings. Yo can apply several filters: by date, by user, by user and date, and all of them.\"","##","## We would expect the Get booking method to be able to return all bookings for all users ('and all of them')","## I would argue that the expected way to achieve this would be to provide no User ID and no Booking Date.","##","## This Scenario is to test the behaviour we would expect, if the API would allow to search for bookings","## by providing no User ID and no Booking Date.","##","## However, as is, this test case will FAIL"],"keyword":"Given","line":23},{"name":"path 'booking'","result":{"duration":119800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":24},{"name":"method Get","result":{"duration":5058800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":25,"doc_string":{"content_type":"","value":"21:25:24.831 request:\n1 > GET http:\/\/127.0.0.1:8900\/booking\n1 > Host: 127.0.0.1:8900\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/1.8.0_301)\n1 > Accept-Encoding: gzip,deflate\n\n\n21:25:24.834 response time in milliseconds: 3\n1 < 400\n1 < Content-Type: text\/plain;charset=UTF-8\n1 < Content-Length: 30\n1 < Date: Tue, 21 Sep 2021 19:25:24 GMT\n1 < Connection: close\nBad request: date and id empty\n","line":25}},{"name":"status 200","result":{"duration":118400,"error_message":"status code was: 400, expected: 200, response time in milliseconds: 3, url: http:\/\/127.0.0.1:8900\/booking, response: \nBad request: date and id empty\nclasspath:examples\/bookings\/unclearbooking.feature:26","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":26,"doc_string":{"content_type":"","value":"21:25:24.835 classpath:examples\/bookings\/unclearbooking.feature:26\nThen status 200\nstatus code was: 400, expected: 200, response time in milliseconds: 3, url: http:\/\/127.0.0.1:8900\/booking, response: \nBad request: date and id empty\nclasspath:examples\/bookings\/unclearbooking.feature:26\n","line":26}},{"name":"match response == \"#array\"","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":27},{"name":"match each response[*] == { date: \"#string\", destination: \"#string\", idBooking: \"#string\", idUser: \"#string\", origin: \"#string\" }","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":28}],"tags":[{"name":"@UnclearBooking","line":8},{"name":"@UnclearGetBookingNullParameters","line":8}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"url apiURL","result":{"duration":66300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":4,"doc_string":{"content_type":"","value":"21:25:24.837 karate.env system property was: null \n","line":4}}]},{"line":33,"name":"Get booking: Incorrect date format: 2021-09-19xyz","description":"","id":"get-booking--incorrect-date-format--2021-09-19xyz","type":"scenario","keyword":"Scenario","steps":[{"name":"params { id: \"#(existingUser.id)\", date: \"2021-09-19xyz\" }","result":{"duration":260100,"status":"passed"},"match":{"location":"karate","arguments":[]},"comments":["## While the API tries to make sure that a strict date format is followed,","## it fails to detect incorrect date formats of type 'yyyy-MM-ddXXX'","## (Where yyyy=year, MM=month, dd=day and XXX=Any number of characters)","##","## This creates a problem where bookings with this incorrect date format","## don't show up with the Get \/booking method for a given date if the user","## had a typo at the end of their date, unless you Get the bookings with","## that exact same typo.","##","## Additionally, if bookings are created with an incorrect date format","## then subsequent tests that gets all bookings for a particular userID","## that has bookings with incorrect date format, then the @GetBooking","## test will fail since it uses a more robust function for detecting","## incorrect date formats.","##","## This Scenario is to test the behaviour we would expect, if the API","## was able to also detect incorrect date formats of this type.","##","## However, as is, this test case will FAIL!"],"keyword":"Given","line":53},{"name":"path 'booking'","result":{"duration":49000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":54},{"name":"method Get","result":{"duration":8677500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":55,"doc_string":{"content_type":"","value":"21:25:24.840 request:\n1 > GET http:\/\/127.0.0.1:8900\/booking?date=2021-09-19xyz&id=pepe%40pepe.pe1-0.1\n1 > Host: 127.0.0.1:8900\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/1.8.0_301)\n1 > Accept-Encoding: gzip,deflate\n\n\n21:25:24.847 response time in milliseconds: 7\n1 < 200\n1 < Content-Type: application\/json;charset=UTF-8\n1 < Transfer-Encoding: chunked\n1 < Date: Tue, 21 Sep 2021 19:25:24 GMT\n[]\n","line":55}},{"name":"status 500","result":{"duration":24200,"error_message":"status code was: 200, expected: 500, response time in milliseconds: 7, url: http:\/\/127.0.0.1:8900\/booking?date=2021-09-19xyz&id=pepe%40pepe.pe1-0.1, response: \n[]\nclasspath:examples\/bookings\/unclearbooking.feature:56","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":56,"doc_string":{"content_type":"","value":"21:25:24.847 classpath:examples\/bookings\/unclearbooking.feature:56\nThen status 500\nstatus code was: 200, expected: 500, response time in milliseconds: 7, url: http:\/\/127.0.0.1:8900\/booking?date=2021-09-19xyz&id=pepe%40pepe.pe1-0.1, response: \n[]\nclasspath:examples\/bookings\/unclearbooking.feature:56\n","line":56}},{"name":"match response == {timestamp:\"#string\", status:500, error:\"Internal Server Error\", message:\"Format date not valid\", path: \"\/booking\"}","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":57}],"tags":[{"name":"@UnclearBooking","line":32},{"name":"@UnclearGetBookingIncorrectDate","line":32}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"url apiURL","result":{"duration":105100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":4,"doc_string":{"content_type":"","value":"21:25:24.838 karate.env system property was: null \n","line":4}}]},{"line":62,"name":"Post booking: Incorrect date format: 2021-09-19xyz","description":"","id":"post-booking--incorrect-date-format--2021-09-19xyz","type":"scenario","keyword":"Scenario","steps":[{"name":"def dataGenerator = Java.type('helpers.DataGenerator')","result":{"duration":279700,"status":"passed"},"match":{"location":"karate","arguments":[]},"comments":["## Given the same API problem with incorrect date formats outlined in the above Scenario,","## this Scenario is to test the behaviour we would expect, if the API was able to also","## detect incorrect date formats of this type when creating new bookings.","##","## However, as is, this test case will FAIL!"],"keyword":"*","line":68},{"name":"def user =","result":{"duration":32678500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":69,"doc_string":{"content_type":"","value":"{\n  email: \"IncorrectDateTestEmail@email.com\",\n  name: \"#(dataGenerator.getRandomName())\"        \n}","line":69}},{"name":"path 'user'","result":{"duration":1493700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":76},{"name":"request user","result":{"duration":311200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":77},{"name":"method Post","result":{"duration":14594600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":78,"doc_string":{"content_type":"","value":"21:25:24.874 request:\n1 > POST http:\/\/127.0.0.1:8900\/user\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 74\n1 > Host: 127.0.0.1:8900\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/1.8.0_301)\n1 > Accept-Encoding: gzip,deflate\n{\"email\":\"IncorrectDateTestEmail@email.com\",\"name\":\"Alejandrina Leuschke\"}\n\n21:25:24.887 response time in milliseconds: 13\n1 < 201\n1 < Content-Type: application\/json;charset=UTF-8\n1 < Transfer-Encoding: chunked\n1 < Date: Tue, 21 Sep 2021 19:25:24 GMT\n{\"email\":\"IncorrectDateTestEmail@email.com\",\"name\":\"Alejandrina Leuschke\",\"id\":\"IncorrectDateTestEmail@email.com-0.552965395665666\",\"bookings\":[]}\n","line":78}},{"name":"status 201","result":{"duration":4200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":79},{"name":"user.id = response.id","result":{"duration":981000,"status":"passed"},"match":{"location":"karate","arguments":[]},"comments":["#Save userId"],"keyword":"*","line":82},{"name":"path 'booking'","result":{"duration":49600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":84},{"name":"request { date: \"2020-02-03 XXX\", destination: \"ARN\", id: \"#(user.id)\", origin: \"MAD\" }","result":{"duration":533100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":85},{"name":"method Post","result":{"duration":10816900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":86,"doc_string":{"content_type":"","value":"21:25:24.893 request:\n2 > POST http:\/\/127.0.0.1:8900\/booking\n2 > Content-Type: application\/json; charset=UTF-8\n2 > Content-Length: 118\n2 > Host: 127.0.0.1:8900\n2 > Connection: Keep-Alive\n2 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/1.8.0_301)\n2 > Accept-Encoding: gzip,deflate\n{\"date\":\"2020-02-03 XXX\",\"destination\":\"ARN\",\"id\":\"IncorrectDateTestEmail@email.com-0.552965395665666\",\"origin\":\"MAD\"}\n\n21:25:24.900 response time in milliseconds: 7\n2 < 201\n2 < Content-Type: application\/json;charset=UTF-8\n2 < Transfer-Encoding: chunked\n2 < Date: Tue, 21 Sep 2021 19:25:24 GMT\n{\"idBooking\":\"MAD-ARN-0.275751412266237\",\"idUser\":\"IncorrectDateTestEmail@email.com-0.552965395665666\",\"origin\":\"MAD\",\"destination\":\"ARN\",\"date\":\"2020-02-03 XXX\"}\n","line":86}},{"name":"status 400","result":{"duration":19800,"error_message":"status code was: 201, expected: 400, response time in milliseconds: 7, url: http:\/\/127.0.0.1:8900\/booking, response: \n{\"idBooking\":\"MAD-ARN-0.275751412266237\",\"idUser\":\"IncorrectDateTestEmail@email.com-0.552965395665666\",\"origin\":\"MAD\",\"destination\":\"ARN\",\"date\":\"2020-02-03 XXX\"}\nclasspath:examples\/bookings\/unclearbooking.feature:87","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":87,"doc_string":{"content_type":"","value":"21:25:24.900 classpath:examples\/bookings\/unclearbooking.feature:87\nThen status 400\nstatus code was: 201, expected: 400, response time in milliseconds: 7, url: http:\/\/127.0.0.1:8900\/booking, response: \n{\"idBooking\":\"MAD-ARN-0.275751412266237\",\"idUser\":\"IncorrectDateTestEmail@email.com-0.552965395665666\",\"origin\":\"MAD\",\"destination\":\"ARN\",\"date\":\"2020-02-03 XXX\"}\nclasspath:examples\/bookings\/unclearbooking.feature:87\n","line":87}},{"name":"match response contains \"Date format not valid\"","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":88}],"tags":[{"name":"@UnclearPostBookingIncorrectDate","line":61},{"name":"@UnclearBooking","line":61}]}],"name":"examples\/bookings\/unclearbooking.feature","description":"Unclear booking scenarios","id":"unclear-booking-scenarios","keyword":"Feature","uri":"examples\/bookings\/unclearbooking.feature"}]